{"ast":null,"code":"'use strict';\n\nvar markdownLineEnding = require('../character/markdown-line-ending.js');\n\nvar chunkedSplice = require('../util/chunked-splice.js');\n\nvar prefixSize = require('../util/prefix-size.js');\n\nvar factorySpace = require('./factory-space.js');\n\nvar codeIndented = {\n  name: 'codeIndented',\n  tokenize: tokenizeCodeIndented,\n  resolve: resolveCodeIndented\n};\nvar indentedContentConstruct = {\n  tokenize: tokenizeIndentedContent,\n  partial: true\n};\n\nfunction resolveCodeIndented(events, context) {\n  var code = {\n    type: 'codeIndented',\n    start: events[0][1].start,\n    end: events[events.length - 1][1].end\n  };\n  chunkedSplice(events, 0, 0, [['enter', code, context]]);\n  chunkedSplice(events, events.length, 0, [['exit', code, context]]);\n  return events;\n}\n\nfunction tokenizeCodeIndented(effects, ok, nok) {\n  return effects.attempt(indentedContentConstruct, afterPrefix, nok);\n\n  function afterPrefix(code) {\n    if (code === null) {\n      return ok(code);\n    }\n\n    if (markdownLineEnding(code)) {\n      return effects.attempt(indentedContentConstruct, afterPrefix, ok)(code);\n    }\n\n    effects.enter('codeFlowValue');\n    return content(code);\n  }\n\n  function content(code) {\n    if (code === null || markdownLineEnding(code)) {\n      effects.exit('codeFlowValue');\n      return afterPrefix(code);\n    }\n\n    effects.consume(code);\n    return content;\n  }\n}\n\nfunction tokenizeIndentedContent(effects, ok, nok) {\n  var self = this;\n  return factorySpace(effects, afterPrefix, 'linePrefix', 4 + 1);\n\n  function afterPrefix(code) {\n    if (markdownLineEnding(code)) {\n      effects.enter('lineEnding');\n      effects.consume(code);\n      effects.exit('lineEnding');\n      return factorySpace(effects, afterPrefix, 'linePrefix', 4 + 1);\n    }\n\n    return prefixSize(self.events, 'linePrefix') < 4 ? nok(code) : ok(code);\n  }\n}\n\nmodule.exports = codeIndented;","map":{"version":3,"names":["markdownLineEnding","require","chunkedSplice","prefixSize","factorySpace","codeIndented","name","tokenize","tokenizeCodeIndented","resolve","resolveCodeIndented","indentedContentConstruct","tokenizeIndentedContent","partial","events","context","code","type","start","end","length","effects","ok","nok","attempt","afterPrefix","enter","content","exit","consume","self","module","exports"],"sources":["/Users/prestonmackert/Documents/graphql/client/node_modules/micromark/dist/tokenize/code-indented.js"],"sourcesContent":["'use strict'\n\nvar markdownLineEnding = require('../character/markdown-line-ending.js')\nvar chunkedSplice = require('../util/chunked-splice.js')\nvar prefixSize = require('../util/prefix-size.js')\nvar factorySpace = require('./factory-space.js')\n\nvar codeIndented = {\n  name: 'codeIndented',\n  tokenize: tokenizeCodeIndented,\n  resolve: resolveCodeIndented\n}\nvar indentedContentConstruct = {\n  tokenize: tokenizeIndentedContent,\n  partial: true\n}\n\nfunction resolveCodeIndented(events, context) {\n  var code = {\n    type: 'codeIndented',\n    start: events[0][1].start,\n    end: events[events.length - 1][1].end\n  }\n  chunkedSplice(events, 0, 0, [['enter', code, context]])\n  chunkedSplice(events, events.length, 0, [['exit', code, context]])\n  return events\n}\n\nfunction tokenizeCodeIndented(effects, ok, nok) {\n  return effects.attempt(indentedContentConstruct, afterPrefix, nok)\n\n  function afterPrefix(code) {\n    if (code === null) {\n      return ok(code)\n    }\n\n    if (markdownLineEnding(code)) {\n      return effects.attempt(indentedContentConstruct, afterPrefix, ok)(code)\n    }\n\n    effects.enter('codeFlowValue')\n    return content(code)\n  }\n\n  function content(code) {\n    if (code === null || markdownLineEnding(code)) {\n      effects.exit('codeFlowValue')\n      return afterPrefix(code)\n    }\n\n    effects.consume(code)\n    return content\n  }\n}\n\nfunction tokenizeIndentedContent(effects, ok, nok) {\n  var self = this\n  return factorySpace(effects, afterPrefix, 'linePrefix', 4 + 1)\n\n  function afterPrefix(code) {\n    if (markdownLineEnding(code)) {\n      effects.enter('lineEnding')\n      effects.consume(code)\n      effects.exit('lineEnding')\n      return factorySpace(effects, afterPrefix, 'linePrefix', 4 + 1)\n    }\n\n    return prefixSize(self.events, 'linePrefix') < 4 ? nok(code) : ok(code)\n  }\n}\n\nmodule.exports = codeIndented\n"],"mappings":"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"},"metadata":{},"sourceType":"script"}