{"ast":null,"code":"var _jsxFileName = \"/Users/prestonmackert/Documents/graphql/client/src/components/query-result.js\";\nimport React from 'react';\nimport styled from '@emotion/styled';\nimport { LoadingSpinner } from '@apollo/space-kit/Loaders/LoadingSpinner';\n/**\n * Query Results conditionally renders Apollo useQuery hooks states:\n * loading, error or its children when data is ready\n */\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst QueryResult = _ref => {\n  let {\n    loading,\n    error,\n    data,\n    children\n  } = _ref;\n\n  if (error) {\n    return /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"ERROR: \", error.message]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 12\n    }, this);\n  }\n\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(SpinnerContainer, {\n      children: /*#__PURE__*/_jsxDEV(LoadingSpinner, {\n        \"data-testid\": \"spinner\",\n        size: \"large\",\n        theme: \"grayscale\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 16,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 7\n    }, this);\n  }\n\n  if (!data) {\n    return /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Nothing to show...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 12\n    }, this);\n  }\n\n  if (data) {\n    return children;\n  }\n};\n\n_c = QueryResult;\nexport default QueryResult;\n/** Query Result styled components */\n\nconst SpinnerContainer = styled.div({\n  display: 'flex',\n  justifyContent: 'center',\n  alignItems: 'center',\n  width: '100%',\n  height: '100vh'\n});\n_c2 = SpinnerContainer;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"QueryResult\");\n$RefreshReg$(_c2, \"SpinnerContainer\");","map":{"version":3,"names":["React","styled","LoadingSpinner","QueryResult","loading","error","data","children","message","SpinnerContainer","div","display","justifyContent","alignItems","width","height"],"sources":["/Users/prestonmackert/Documents/graphql/client/src/components/query-result.js"],"sourcesContent":["import React from 'react';\nimport styled from '@emotion/styled';\nimport { LoadingSpinner } from '@apollo/space-kit/Loaders/LoadingSpinner';\n\n/**\n * Query Results conditionally renders Apollo useQuery hooks states:\n * loading, error or its children when data is ready\n */\nconst QueryResult = ({ loading, error, data, children }) => {\n  if (error) {\n    return <p>ERROR: {error.message}</p>;\n  }\n  if (loading) {\n    return (\n      <SpinnerContainer>\n        <LoadingSpinner data-testid=\"spinner\" size=\"large\" theme=\"grayscale\" />\n      </SpinnerContainer>\n    );\n  }\n  if (!data) {\n    return <p>Nothing to show...</p>;\n  }\n  if (data) {\n    return children;\n  }\n};\n\nexport default QueryResult;\n\n/** Query Result styled components */\nconst SpinnerContainer = styled.div({\n  display: 'flex',\n  justifyContent: 'center',\n  alignItems: 'center',\n  width: '100%',\n  height: '100vh',\n});\n"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,MAAmB,iBAAnB;AACA,SAASC,cAAT,QAA+B,0CAA/B;AAEA;AACA;AACA;AACA;;;;AACA,MAAMC,WAAW,GAAG,QAAwC;EAAA,IAAvC;IAAEC,OAAF;IAAWC,KAAX;IAAkBC,IAAlB;IAAwBC;EAAxB,CAAuC;;EAC1D,IAAIF,KAAJ,EAAW;IACT,oBAAO;MAAA,sBAAWA,KAAK,CAACG,OAAjB;IAAA;MAAA;MAAA;MAAA;IAAA,QAAP;EACD;;EACD,IAAIJ,OAAJ,EAAa;IACX,oBACE,QAAC,gBAAD;MAAA,uBACE,QAAC,cAAD;QAAgB,eAAY,SAA5B;QAAsC,IAAI,EAAC,OAA3C;QAAmD,KAAK,EAAC;MAAzD;QAAA;QAAA;QAAA;MAAA;IADF;MAAA;MAAA;MAAA;IAAA,QADF;EAKD;;EACD,IAAI,CAACE,IAAL,EAAW;IACT,oBAAO;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QAAP;EACD;;EACD,IAAIA,IAAJ,EAAU;IACR,OAAOC,QAAP;EACD;AACF,CAjBD;;KAAMJ,W;AAmBN,eAAeA,WAAf;AAEA;;AACA,MAAMM,gBAAgB,GAAGR,MAAM,CAACS,GAAP,CAAW;EAClCC,OAAO,EAAE,MADyB;EAElCC,cAAc,EAAE,QAFkB;EAGlCC,UAAU,EAAE,QAHsB;EAIlCC,KAAK,EAAE,MAJ2B;EAKlCC,MAAM,EAAE;AAL0B,CAAX,CAAzB;MAAMN,gB"},"metadata":{},"sourceType":"module"}