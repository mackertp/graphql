{"ast":null,"code":"'use strict';\n\nconst React = require('react');\n\nconst ReactIs = require('react-is');\n\nconst svg = require('property-information/svg');\n\nconst find = require('property-information/find');\n\nconst hastToReact = require('property-information/hast-to-react.json');\n\nconst spaces = require('space-separated-tokens');\n\nconst commas = require('comma-separated-tokens');\n\nconst style = require('style-to-object');\n\nexports.hastToReact = toReact;\nexports.hastChildrenToReact = childrenToReact;\n/**\n * @typedef {JSX.IntrinsicElements} IntrinsicElements\n * @typedef {import('react').ReactNode} ReactNode\n * @typedef {import('unist').Position} Position\n * @typedef {import('hast').Element} Element\n * @typedef {import('hast').Root} Root\n * @typedef {import('hast').Text} Text\n * @typedef {import('hast').Comment} Comment\n * @typedef {import('hast').DocType} Doctype\n */\n\n/**\n * @typedef Info\n * @property {string?} space\n * @property {string?} attribute\n * @property {string?} property\n * @property {boolean} boolean\n * @property {boolean} booleanish\n * @property {boolean} overloadedBoolean\n * @property {boolean} number\n * @property {boolean} commaSeparated\n * @property {boolean} spaceSeparated\n * @property {boolean} commaOrSpaceSeparated\n * @property {boolean} mustUseProperty\n * @property {boolean} defined\n *\n * @typedef Schema\n * @property {Object.<string, Info>} property\n * @property {Object.<string, string>} normal\n * @property {string?} space\n *\n * @typedef Raw\n * @property {'raw'} type\n * @property {string} value\n *\n * @typedef Context\n * @property {TransformOptions} options\n * @property {Schema} schema\n * @property {number} listDepth\n *\n * @callback TransformLink\n * @param {string} href\n * @param {Array.<Comment|Element|Text>} children\n * @param {string?} title\n * @returns {string}\n *\n * @callback TransformImage\n * @param {string} src\n * @param {string} alt\n * @param {string?} title\n * @returns {string}\n *\n * @callback TransformLinkTarget\n * @param {string} href\n * @param {Array.<Comment|Element|Text>} children\n * @param {string?} title\n * @returns {string|undefined}\n *\n * @typedef {keyof IntrinsicElements} ReactMarkdownNames\n *\n * To do: is `data-sourcepos` typeable?\n *\n * @typedef ReactMarkdownProps\n * @property {Element} node\n * @property {string} key\n * @property {ReactNode[]} children\n * @property {Position?} [sourcePosition] Passed when `options.rawSourcePos` is given\n * @property {number} [index] Passed when `options.includeElementIndex` is given\n * @property {number} [siblingCount] Passed when `options.includeElementIndex` is given\n *\n * @callback CodeComponent\n * @param {JSX.IntrinsicElements['code'] & ReactMarkdownProps & {inline?: boolean}} props\n * @returns {ReactNode}\n *\n * @callback HeadingComponent\n * @param {JSX.IntrinsicElements['h1'] & ReactMarkdownProps & {level: number}} props\n * @returns {ReactNode}\n *\n * @callback LiComponent\n * @param {JSX.IntrinsicElements['li'] & ReactMarkdownProps & {checked: boolean|null, index: number, ordered: boolean}} props\n * @returns {ReactNode}\n *\n * @callback OrderedListComponent\n * @param {JSX.IntrinsicElements['ol'] & ReactMarkdownProps & {depth: number, ordered: true}} props\n * @returns {ReactNode}\n *\n * @callback TableCellComponent\n * @param {JSX.IntrinsicElements['table'] & ReactMarkdownProps & {style?: Object.<string, unknown>, isHeader: boolean}} props\n * @returns {ReactNode}\n *\n * @callback TableRowComponent\n * @param {JSX.IntrinsicElements['tr'] & ReactMarkdownProps & {isHeader: boolean}} props\n * @returns {ReactNode}\n *\n * @callback UnorderedListComponent\n * @param {JSX.IntrinsicElements['ul'] & ReactMarkdownProps & {depth: number, ordered: false}} props\n * @returns {ReactNode}\n *\n * @typedef SpecialComponents\n * @property {CodeComponent|ReactMarkdownNames} code\n * @property {HeadingComponent|ReactMarkdownNames} h1\n * @property {HeadingComponent|ReactMarkdownNames} h2\n * @property {HeadingComponent|ReactMarkdownNames} h3\n * @property {HeadingComponent|ReactMarkdownNames} h4\n * @property {HeadingComponent|ReactMarkdownNames} h5\n * @property {HeadingComponent|ReactMarkdownNames} h6\n * @property {LiComponent|ReactMarkdownNames} li\n * @property {OrderedListComponent|ReactMarkdownNames} ol\n * @property {TableCellComponent|ReactMarkdownNames} td\n * @property {TableCellComponent|ReactMarkdownNames} th\n * @property {TableRowComponent|ReactMarkdownNames} tr\n * @property {UnorderedListComponent|ReactMarkdownNames} ul\n *\n * @typedef {{[TagName in keyof IntrinsicElements]: TagName | ((props: IntrinsicElements[TagName] & ReactMarkdownProps) => ReactNode)}} NormalComponents\n * @typedef {Partial<Omit<NormalComponents, keyof SpecialComponents> & SpecialComponents>} Components\n */\n\n/**\n * @typedef TransformOptions\n * @property {boolean} [sourcePos=false]\n * @property {boolean} [rawSourcePos=false]\n * @property {boolean} [skipHtml=false]\n * @property {boolean} [includeElementIndex=false]\n * @property {null|false|TransformLink} [transformLinkUri]\n * @property {TransformImage} [transformImageUri]\n * @property {string|TransformLinkTarget} [linkTarget]\n * @property {Components} [components]\n */\n\nconst own = {}.hasOwnProperty; // The table-related elements that must not contain whitespace text according\n// to React.\n\nconst tableElements = new Set(['table', 'thead', 'tbody', 'tfoot', 'tr']);\n/**\n * @param {Context} context\n * @param {Element|Root} node\n */\n\nfunction childrenToReact(context, node) {\n  /** @type {Array.<ReactNode>} */\n  const children = [];\n  let childIndex = -1;\n  /** @type {Comment|Doctype|Element|Raw|Text} */\n\n  let child;\n\n  while (++childIndex < node.children.length) {\n    child = node.children[childIndex];\n\n    if (child.type === 'element') {\n      children.push(toReact(context, child, childIndex, node));\n    } else if (child.type === 'text') {\n      // React does not permit whitespace text elements as children of table:\n      // cf. https://github.com/remarkjs/react-markdown/issues/576\n      if (node.type !== 'element' || !tableElements.has(node.tagName) || child.value !== '\\n') {\n        children.push(child.value);\n      }\n    } // @ts-expect-error `raw` nodes are non-standard\n    else if (child.type === 'raw' && !context.options.skipHtml) {\n      // Default behavior is to show (encoded) HTML.\n      // @ts-expect-error `raw` nodes are non-standard\n      children.push(child.value);\n    }\n  }\n\n  return children;\n}\n/**\n * @param {Context} context\n * @param {Element} node\n * @param {number} index\n * @param {Element|Root} parent\n */\n\n\nfunction toReact(context, node, index, parent) {\n  const options = context.options;\n  const parentSchema = context.schema;\n  /** @type {ReactMarkdownNames} */\n  // @ts-expect-error assume a known HTML/SVG element.\n\n  const name = node.tagName;\n  /** @type {Object.<string, unknown>} */\n\n  const properties = {};\n  let schema = parentSchema;\n  /** @type {string} */\n\n  let property;\n\n  if (parentSchema.space === 'html' && name === 'svg') {\n    schema = svg;\n    context.schema = schema;\n  }\n  /* istanbul ignore else - types say theyâ€™re optional. */\n\n\n  if (node.properties) {\n    for (property in node.properties) {\n      /* istanbul ignore else - prototype polution. */\n      if (own.call(node.properties, property)) {\n        addProperty(properties, property, node.properties[property], context);\n      }\n    }\n  }\n\n  if (name === 'ol' || name === 'ul') {\n    context.listDepth++;\n  }\n\n  const children = childrenToReact(context, node);\n\n  if (name === 'ol' || name === 'ul') {\n    context.listDepth--;\n  } // Restore parent schema.\n\n\n  context.schema = parentSchema; // Nodes created by plugins do not have positional info, in which case we use\n  // an object that matches the positon interface.\n\n  const position = node.position || {\n    start: {\n      line: null,\n      column: null,\n      offset: null\n    },\n    end: {\n      line: null,\n      column: null,\n      offset: null\n    }\n  };\n  const component = options.components && own.call(options.components, name) ? options.components[name] : name;\n  const basic = typeof component === 'string' || component === React.Fragment;\n\n  if (!ReactIs.isValidElementType(component)) {\n    throw new TypeError(`Component for name \\`${name}\\` not defined or is not renderable`);\n  }\n\n  properties.key = [name, position.start.line, position.start.column, index].join('-');\n\n  if (name === 'a' && options.linkTarget) {\n    properties.target = typeof options.linkTarget === 'function' ? // @ts-expect-error assume `href` is a string\n    options.linkTarget(properties.href, node.children, properties.title) : options.linkTarget;\n  }\n\n  if (name === 'a' && options.transformLinkUri) {\n    properties.href = options.transformLinkUri( // @ts-expect-error assume `href` is a string\n    properties.href, node.children, properties.title);\n  }\n\n  if (!basic && name === 'code' && parent.type === 'element' && parent.tagName !== 'pre') {\n    properties.inline = true;\n  }\n\n  if (!basic && (name === 'h1' || name === 'h2' || name === 'h3' || name === 'h4' || name === 'h5' || name === 'h6')) {\n    properties.level = parseInt(name.charAt(1), 10);\n  }\n\n  if (name === 'img' && options.transformImageUri) {\n    properties.src = options.transformImageUri( // @ts-expect-error assume `src` is a string\n    properties.src, properties.alt, properties.title);\n  }\n\n  if (!basic && name === 'li' && parent.type === 'element') {\n    const input = getInputElement(node);\n    properties.checked = input && input.properties ? Boolean(input.properties.checked) : null;\n    properties.index = getElementsBeforeCount(parent, node);\n    properties.ordered = parent.tagName === 'ol';\n  }\n\n  if (!basic && (name === 'ol' || name === 'ul')) {\n    properties.ordered = name === 'ol';\n    properties.depth = context.listDepth;\n  }\n\n  if (name === 'td' || name === 'th') {\n    if (properties.align) {\n      if (!properties.style) properties.style = {}; // @ts-expect-error assume `style` is an object\n\n      properties.style.textAlign = properties.align;\n      delete properties.align;\n    }\n\n    if (!basic) {\n      properties.isHeader = name === 'th';\n    }\n  }\n\n  if (!basic && name === 'tr' && parent.type === 'element') {\n    properties.isHeader = Boolean(parent.tagName === 'thead');\n  } // If `sourcePos` is given, pass source information (line/column info from markdown source).\n\n\n  if (options.sourcePos) {\n    properties['data-sourcepos'] = flattenPosition(position);\n  }\n\n  if (!basic && options.rawSourcePos) {\n    properties.sourcePosition = node.position;\n  } // If `includeElementIndex` is given, pass node index info to components.\n\n\n  if (!basic && options.includeElementIndex) {\n    properties.index = getElementsBeforeCount(parent, node);\n    properties.siblingCount = getElementsBeforeCount(parent);\n  }\n\n  if (!basic) {\n    properties.node = node;\n  } // Ensure no React warnings are emitted for void elements w/ children.\n\n\n  return children.length > 0 ? React.createElement(component, properties, children) : React.createElement(component, properties);\n}\n/**\n * @param {Element|Root} node\n * @returns {Element?}\n */\n\n\nfunction getInputElement(node) {\n  let index = -1;\n\n  while (++index < node.children.length) {\n    const child = node.children[index];\n\n    if (child.type === 'element' && child.tagName === 'input') {\n      return child;\n    }\n  }\n\n  return null;\n}\n/**\n * @param {Element|Root} parent\n * @param {Element} [node]\n * @returns {number}\n */\n\n\nfunction getElementsBeforeCount(parent, node) {\n  let index = -1;\n  let count = 0;\n\n  while (++index < parent.children.length) {\n    if (parent.children[index] === node) break;\n    if (parent.children[index].type === 'element') count++;\n  }\n\n  return count;\n}\n/**\n * @param {Object.<string, unknown>} props\n * @param {string} prop\n * @param {unknown} value\n * @param {Context} ctx\n */\n\n\nfunction addProperty(props, prop, value, ctx) {\n  /** @type {Info} */\n  const info = find(ctx.schema, prop);\n  let result = value; // Ignore nullish and `NaN` values.\n  // eslint-disable-next-line no-self-compare\n\n  if (result === null || result === undefined || result !== result) {\n    return;\n  } // Accept `array`.\n  // Most props are space-separated.\n\n\n  if (result && typeof result === 'object' && 'length' in result) {\n    // type-coverage:ignore-next-line remove when typed.\n    result = (info.commaSeparated ? commas : spaces).stringify(result);\n  }\n\n  if (info.property === 'style' && typeof result === 'string') {\n    result = parseStyle(result);\n  }\n  /* istanbul ignore else - types say theyâ€™re optional. */\n\n\n  if (info.space && info.property) {\n    props[own.call(hastToReact, info.property) ? hastToReact[info.property] : info.property] = result;\n  } else if (info.attribute) {\n    props[info.attribute] = result;\n  }\n}\n/**\n * @param {string} value\n * @returns {Object.<string, string>}\n */\n\n\nfunction parseStyle(value) {\n  /** @type {Object.<string, string>} */\n  const result = {};\n\n  try {\n    style(value, iterator);\n  } catch (\n  /** @type {unknown} */\n  _) {// Silent.\n  }\n\n  return result;\n  /**\n   * @param {string} name\n   * @param {string} v\n   */\n\n  function iterator(name, v) {\n    const k = name.slice(0, 4) === '-ms-' ? `ms-${name.slice(4)}` : name;\n    result[k.replace(/-([a-z])/g, styleReplacer)] = v;\n  }\n}\n/**\n * @param {unknown} _\n * @param {string} $1\n */\n\n\nfunction styleReplacer(_, $1) {\n  return $1.toUpperCase();\n}\n/**\n * @param {Position|{start: {line: null, column: null, offset: null}, end: {line: null, column: null, offset: null}}} pos\n * @returns {string}\n */\n\n\nfunction flattenPosition(pos) {\n  return [pos.start.line, ':', pos.start.column, '-', pos.end.line, ':', pos.end.column].map(d => String(d)).join('');\n}","map":{"version":3,"names":["React","require","ReactIs","svg","find","hastToReact","spaces","commas","style","exports","toReact","hastChildrenToReact","childrenToReact","own","hasOwnProperty","tableElements","Set","context","node","children","childIndex","child","length","type","push","has","tagName","value","options","skipHtml","index","parent","parentSchema","schema","name","properties","property","space","call","addProperty","listDepth","position","start","line","column","offset","end","component","components","basic","Fragment","isValidElementType","TypeError","key","join","linkTarget","target","href","title","transformLinkUri","inline","level","parseInt","charAt","transformImageUri","src","alt","input","getInputElement","checked","Boolean","getElementsBeforeCount","ordered","depth","align","textAlign","isHeader","sourcePos","flattenPosition","rawSourcePos","sourcePosition","includeElementIndex","siblingCount","createElement","count","props","prop","ctx","info","result","undefined","commaSeparated","stringify","parseStyle","attribute","iterator","_","v","k","slice","replace","styleReplacer","$1","toUpperCase","pos","map","d","String"],"sources":["/Users/prestonmackert/Documents/graphql/odyssey-lift-off-part1/client/node_modules/react-markdown/src/ast-to-react.js"],"sourcesContent":["'use strict'\n\nconst React = require('react')\nconst ReactIs = require('react-is')\nconst svg = require('property-information/svg')\nconst find = require('property-information/find')\nconst hastToReact = require('property-information/hast-to-react.json')\nconst spaces = require('space-separated-tokens')\nconst commas = require('comma-separated-tokens')\nconst style = require('style-to-object')\n\nexports.hastToReact = toReact\nexports.hastChildrenToReact = childrenToReact\n\n/**\n * @typedef {JSX.IntrinsicElements} IntrinsicElements\n * @typedef {import('react').ReactNode} ReactNode\n * @typedef {import('unist').Position} Position\n * @typedef {import('hast').Element} Element\n * @typedef {import('hast').Root} Root\n * @typedef {import('hast').Text} Text\n * @typedef {import('hast').Comment} Comment\n * @typedef {import('hast').DocType} Doctype\n */\n\n/**\n * @typedef Info\n * @property {string?} space\n * @property {string?} attribute\n * @property {string?} property\n * @property {boolean} boolean\n * @property {boolean} booleanish\n * @property {boolean} overloadedBoolean\n * @property {boolean} number\n * @property {boolean} commaSeparated\n * @property {boolean} spaceSeparated\n * @property {boolean} commaOrSpaceSeparated\n * @property {boolean} mustUseProperty\n * @property {boolean} defined\n *\n * @typedef Schema\n * @property {Object.<string, Info>} property\n * @property {Object.<string, string>} normal\n * @property {string?} space\n *\n * @typedef Raw\n * @property {'raw'} type\n * @property {string} value\n *\n * @typedef Context\n * @property {TransformOptions} options\n * @property {Schema} schema\n * @property {number} listDepth\n *\n * @callback TransformLink\n * @param {string} href\n * @param {Array.<Comment|Element|Text>} children\n * @param {string?} title\n * @returns {string}\n *\n * @callback TransformImage\n * @param {string} src\n * @param {string} alt\n * @param {string?} title\n * @returns {string}\n *\n * @callback TransformLinkTarget\n * @param {string} href\n * @param {Array.<Comment|Element|Text>} children\n * @param {string?} title\n * @returns {string|undefined}\n *\n * @typedef {keyof IntrinsicElements} ReactMarkdownNames\n *\n * To do: is `data-sourcepos` typeable?\n *\n * @typedef ReactMarkdownProps\n * @property {Element} node\n * @property {string} key\n * @property {ReactNode[]} children\n * @property {Position?} [sourcePosition] Passed when `options.rawSourcePos` is given\n * @property {number} [index] Passed when `options.includeElementIndex` is given\n * @property {number} [siblingCount] Passed when `options.includeElementIndex` is given\n *\n * @callback CodeComponent\n * @param {JSX.IntrinsicElements['code'] & ReactMarkdownProps & {inline?: boolean}} props\n * @returns {ReactNode}\n *\n * @callback HeadingComponent\n * @param {JSX.IntrinsicElements['h1'] & ReactMarkdownProps & {level: number}} props\n * @returns {ReactNode}\n *\n * @callback LiComponent\n * @param {JSX.IntrinsicElements['li'] & ReactMarkdownProps & {checked: boolean|null, index: number, ordered: boolean}} props\n * @returns {ReactNode}\n *\n * @callback OrderedListComponent\n * @param {JSX.IntrinsicElements['ol'] & ReactMarkdownProps & {depth: number, ordered: true}} props\n * @returns {ReactNode}\n *\n * @callback TableCellComponent\n * @param {JSX.IntrinsicElements['table'] & ReactMarkdownProps & {style?: Object.<string, unknown>, isHeader: boolean}} props\n * @returns {ReactNode}\n *\n * @callback TableRowComponent\n * @param {JSX.IntrinsicElements['tr'] & ReactMarkdownProps & {isHeader: boolean}} props\n * @returns {ReactNode}\n *\n * @callback UnorderedListComponent\n * @param {JSX.IntrinsicElements['ul'] & ReactMarkdownProps & {depth: number, ordered: false}} props\n * @returns {ReactNode}\n *\n * @typedef SpecialComponents\n * @property {CodeComponent|ReactMarkdownNames} code\n * @property {HeadingComponent|ReactMarkdownNames} h1\n * @property {HeadingComponent|ReactMarkdownNames} h2\n * @property {HeadingComponent|ReactMarkdownNames} h3\n * @property {HeadingComponent|ReactMarkdownNames} h4\n * @property {HeadingComponent|ReactMarkdownNames} h5\n * @property {HeadingComponent|ReactMarkdownNames} h6\n * @property {LiComponent|ReactMarkdownNames} li\n * @property {OrderedListComponent|ReactMarkdownNames} ol\n * @property {TableCellComponent|ReactMarkdownNames} td\n * @property {TableCellComponent|ReactMarkdownNames} th\n * @property {TableRowComponent|ReactMarkdownNames} tr\n * @property {UnorderedListComponent|ReactMarkdownNames} ul\n *\n * @typedef {{[TagName in keyof IntrinsicElements]: TagName | ((props: IntrinsicElements[TagName] & ReactMarkdownProps) => ReactNode)}} NormalComponents\n * @typedef {Partial<Omit<NormalComponents, keyof SpecialComponents> & SpecialComponents>} Components\n */\n\n/**\n * @typedef TransformOptions\n * @property {boolean} [sourcePos=false]\n * @property {boolean} [rawSourcePos=false]\n * @property {boolean} [skipHtml=false]\n * @property {boolean} [includeElementIndex=false]\n * @property {null|false|TransformLink} [transformLinkUri]\n * @property {TransformImage} [transformImageUri]\n * @property {string|TransformLinkTarget} [linkTarget]\n * @property {Components} [components]\n */\n\nconst own = {}.hasOwnProperty\n\n// The table-related elements that must not contain whitespace text according\n// to React.\nconst tableElements = new Set(['table', 'thead', 'tbody', 'tfoot', 'tr'])\n\n/**\n * @param {Context} context\n * @param {Element|Root} node\n */\nfunction childrenToReact(context, node) {\n  /** @type {Array.<ReactNode>} */\n  const children = []\n  let childIndex = -1\n  /** @type {Comment|Doctype|Element|Raw|Text} */\n  let child\n\n  while (++childIndex < node.children.length) {\n    child = node.children[childIndex]\n\n    if (child.type === 'element') {\n      children.push(toReact(context, child, childIndex, node))\n    } else if (child.type === 'text') {\n      // React does not permit whitespace text elements as children of table:\n      // cf. https://github.com/remarkjs/react-markdown/issues/576\n      if (\n        node.type !== 'element' ||\n        !tableElements.has(node.tagName) ||\n        child.value !== '\\n'\n      ) {\n        children.push(child.value)\n      }\n    }\n    // @ts-expect-error `raw` nodes are non-standard\n    else if (child.type === 'raw' && !context.options.skipHtml) {\n      // Default behavior is to show (encoded) HTML.\n      // @ts-expect-error `raw` nodes are non-standard\n      children.push(child.value)\n    }\n  }\n\n  return children\n}\n\n/**\n * @param {Context} context\n * @param {Element} node\n * @param {number} index\n * @param {Element|Root} parent\n */\nfunction toReact(context, node, index, parent) {\n  const options = context.options\n  const parentSchema = context.schema\n  /** @type {ReactMarkdownNames} */\n  // @ts-expect-error assume a known HTML/SVG element.\n  const name = node.tagName\n  /** @type {Object.<string, unknown>} */\n  const properties = {}\n  let schema = parentSchema\n  /** @type {string} */\n  let property\n\n  if (parentSchema.space === 'html' && name === 'svg') {\n    schema = svg\n    context.schema = schema\n  }\n\n  /* istanbul ignore else - types say theyâ€™re optional. */\n  if (node.properties) {\n    for (property in node.properties) {\n      /* istanbul ignore else - prototype polution. */\n      if (own.call(node.properties, property)) {\n        addProperty(properties, property, node.properties[property], context)\n      }\n    }\n  }\n\n  if (name === 'ol' || name === 'ul') {\n    context.listDepth++\n  }\n\n  const children = childrenToReact(context, node)\n\n  if (name === 'ol' || name === 'ul') {\n    context.listDepth--\n  }\n\n  // Restore parent schema.\n  context.schema = parentSchema\n\n  // Nodes created by plugins do not have positional info, in which case we use\n  // an object that matches the positon interface.\n  const position = node.position || {\n    start: {line: null, column: null, offset: null},\n    end: {line: null, column: null, offset: null}\n  }\n  const component =\n    options.components && own.call(options.components, name)\n      ? options.components[name]\n      : name\n  const basic = typeof component === 'string' || component === React.Fragment\n\n  if (!ReactIs.isValidElementType(component)) {\n    throw new TypeError(\n      `Component for name \\`${name}\\` not defined or is not renderable`\n    )\n  }\n\n  properties.key = [\n    name,\n    position.start.line,\n    position.start.column,\n    index\n  ].join('-')\n\n  if (name === 'a' && options.linkTarget) {\n    properties.target =\n      typeof options.linkTarget === 'function'\n        ? // @ts-expect-error assume `href` is a string\n          options.linkTarget(properties.href, node.children, properties.title)\n        : options.linkTarget\n  }\n\n  if (name === 'a' && options.transformLinkUri) {\n    properties.href = options.transformLinkUri(\n      // @ts-expect-error assume `href` is a string\n      properties.href,\n      node.children,\n      properties.title\n    )\n  }\n\n  if (\n    !basic &&\n    name === 'code' &&\n    parent.type === 'element' &&\n    parent.tagName !== 'pre'\n  ) {\n    properties.inline = true\n  }\n\n  if (\n    !basic &&\n    (name === 'h1' ||\n      name === 'h2' ||\n      name === 'h3' ||\n      name === 'h4' ||\n      name === 'h5' ||\n      name === 'h6')\n  ) {\n    properties.level = parseInt(name.charAt(1), 10)\n  }\n\n  if (name === 'img' && options.transformImageUri) {\n    properties.src = options.transformImageUri(\n      // @ts-expect-error assume `src` is a string\n      properties.src,\n      properties.alt,\n      properties.title\n    )\n  }\n\n  if (!basic && name === 'li' && parent.type === 'element') {\n    const input = getInputElement(node)\n    properties.checked =\n      input && input.properties ? Boolean(input.properties.checked) : null\n    properties.index = getElementsBeforeCount(parent, node)\n    properties.ordered = parent.tagName === 'ol'\n  }\n\n  if (!basic && (name === 'ol' || name === 'ul')) {\n    properties.ordered = name === 'ol'\n    properties.depth = context.listDepth\n  }\n\n  if (name === 'td' || name === 'th') {\n    if (properties.align) {\n      if (!properties.style) properties.style = {}\n      // @ts-expect-error assume `style` is an object\n      properties.style.textAlign = properties.align\n      delete properties.align\n    }\n\n    if (!basic) {\n      properties.isHeader = name === 'th'\n    }\n  }\n\n  if (!basic && name === 'tr' && parent.type === 'element') {\n    properties.isHeader = Boolean(parent.tagName === 'thead')\n  }\n\n  // If `sourcePos` is given, pass source information (line/column info from markdown source).\n  if (options.sourcePos) {\n    properties['data-sourcepos'] = flattenPosition(position)\n  }\n\n  if (!basic && options.rawSourcePos) {\n    properties.sourcePosition = node.position\n  }\n\n  // If `includeElementIndex` is given, pass node index info to components.\n  if (!basic && options.includeElementIndex) {\n    properties.index = getElementsBeforeCount(parent, node)\n    properties.siblingCount = getElementsBeforeCount(parent)\n  }\n\n  if (!basic) {\n    properties.node = node\n  }\n\n  // Ensure no React warnings are emitted for void elements w/ children.\n  return children.length > 0\n    ? React.createElement(component, properties, children)\n    : React.createElement(component, properties)\n}\n\n/**\n * @param {Element|Root} node\n * @returns {Element?}\n */\nfunction getInputElement(node) {\n  let index = -1\n\n  while (++index < node.children.length) {\n    const child = node.children[index]\n\n    if (child.type === 'element' && child.tagName === 'input') {\n      return child\n    }\n  }\n\n  return null\n}\n\n/**\n * @param {Element|Root} parent\n * @param {Element} [node]\n * @returns {number}\n */\nfunction getElementsBeforeCount(parent, node) {\n  let index = -1\n  let count = 0\n\n  while (++index < parent.children.length) {\n    if (parent.children[index] === node) break\n    if (parent.children[index].type === 'element') count++\n  }\n\n  return count\n}\n\n/**\n * @param {Object.<string, unknown>} props\n * @param {string} prop\n * @param {unknown} value\n * @param {Context} ctx\n */\nfunction addProperty(props, prop, value, ctx) {\n  /** @type {Info} */\n  const info = find(ctx.schema, prop)\n  let result = value\n\n  // Ignore nullish and `NaN` values.\n  // eslint-disable-next-line no-self-compare\n  if (result === null || result === undefined || result !== result) {\n    return\n  }\n\n  // Accept `array`.\n  // Most props are space-separated.\n  if (result && typeof result === 'object' && 'length' in result) {\n    // type-coverage:ignore-next-line remove when typed.\n    result = (info.commaSeparated ? commas : spaces).stringify(result)\n  }\n\n  if (info.property === 'style' && typeof result === 'string') {\n    result = parseStyle(result)\n  }\n\n  /* istanbul ignore else - types say theyâ€™re optional. */\n  if (info.space && info.property) {\n    props[\n      own.call(hastToReact, info.property)\n        ? hastToReact[info.property]\n        : info.property\n    ] = result\n  } else if (info.attribute) {\n    props[info.attribute] = result\n  }\n}\n\n/**\n * @param {string} value\n * @returns {Object.<string, string>}\n */\nfunction parseStyle(value) {\n  /** @type {Object.<string, string>} */\n  const result = {}\n\n  try {\n    style(value, iterator)\n  } catch (/** @type {unknown} */ _) {\n    // Silent.\n  }\n\n  return result\n\n  /**\n   * @param {string} name\n   * @param {string} v\n   */\n  function iterator(name, v) {\n    const k = name.slice(0, 4) === '-ms-' ? `ms-${name.slice(4)}` : name\n    result[k.replace(/-([a-z])/g, styleReplacer)] = v\n  }\n}\n\n/**\n * @param {unknown} _\n * @param {string} $1\n */\nfunction styleReplacer(_, $1) {\n  return $1.toUpperCase()\n}\n\n/**\n * @param {Position|{start: {line: null, column: null, offset: null}, end: {line: null, column: null, offset: null}}} pos\n * @returns {string}\n */\nfunction flattenPosition(pos) {\n  return [\n    pos.start.line,\n    ':',\n    pos.start.column,\n    '-',\n    pos.end.line,\n    ':',\n    pos.end.column\n  ]\n    .map((d) => String(d))\n    .join('')\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"script"}